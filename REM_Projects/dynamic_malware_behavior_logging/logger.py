import sqlite3
import os
from datetime import datetime

# Database setup
DB_FILE = "malware_logs.db"

def setup_database():
    """Creates a database for storing malware activity logs."""
    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    cursor.execute('''CREATE TABLE IF NOT EXISTS logs (
                      id INTEGER PRIMARY KEY AUTOINCREMENT,
                      timestamp TEXT,
                      category TEXT,
                      details TEXT)''')
    conn.commit()
    conn.close()

def log_event(category, details):
    """Logs malware behavior with a timestamp into the database."""
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute("INSERT INTO logs (timestamp, category, details) VALUES (?, ?, ?)",
                       (datetime.now().strftime("%Y-%m-%d %H:%M:%S"), category, details))
        conn.commit()
        conn.close()
        print(f"[LOG] {category}: {details}")
    except Exception as e:
        print(f"[ERROR] Failed to log event: {e}")

def get_logs(limit=10):
    """Retrieves the latest logs from the database."""
    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM logs ORDER BY timestamp DESC LIMIT ?", (limit,))
    logs = cursor.fetchall()
    conn.close()
    return logs

def export_logs_to_csv(filename="malware_logs.csv"):
    """Exports logs to a CSV file for further analysis."""
    import csv

    logs = get_logs(limit=1000)  # Export up to 1000 logs
    if not logs:
        print("[INFO] No logs to export.")
        return

    with open(filename, "w", newline="") as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(["ID", "Timestamp", "Category", "Details"])
        writer.writerows(logs)
    
    print(f"[INFO] Logs exported to {filename}")

if __name__ == "__main__":
    setup_database()
    print("[*] Logger is initialized.")

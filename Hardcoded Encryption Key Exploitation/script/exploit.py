import base64
from Crypto.Cipher import AES

# Hardcoded encryption key (as in server.py)
key = b'1234567890123456'

def decrypt_message(encrypted_message):
    # Decode the Base64-encoded message
    encrypted_data = base64.b64decode(encrypted_message)

    # Extract the nonce and ciphertext
    nonce = encrypted_data[:16]  # First 16 bytes are the nonce
    ciphertext = encrypted_data[16:]

    # Initialize AES cipher with the same key and nonce
    cipher = AES.new(key, AES.MODE_EAX, nonce=nonce)

    # Decrypt the ciphertext
    plaintext = cipher.decrypt(ciphertext)
    return plaintext.decode('utf-8')

if __name__ == '__main__':
    # Example: Replace this with the actual encrypted message from the client
    encrypted_message = input("Enter the encrypted message: ")

    try:
        decrypted_message = decrypt_message(encrypted_message)
        print("Decrypted message:", decrypted_message)
    except Exception as e:
        print("Failed to decrypt:", e)

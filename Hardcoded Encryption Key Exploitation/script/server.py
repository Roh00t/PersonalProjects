from flask import Flask, request, jsonify
from Crypto.Cipher import AES
import base64

app = Flask(__name__)

# Hard-coded encryption key (This is vulnerable)
key = b'1234567890123456'  # 16-byte key for AES

def encrypt_message(message):
    cipher = AES.new(key, AES.MODE_EAX)
    nonce = cipher.nonce
    ciphertext, tag = cipher.encrypt_and_digest(message.encode())
    return base64.b64encode(nonce + ciphertext).decode('utf-8')

# Define the encryption endpoint
@app.route('/encrypt', methods=['POST'])
def encrypt_endpoint():
    data = request.get_json()
    plaintext = data.get('message', '')
    encrypted = encrypt_message(plaintext)
    return jsonify({'encrypted_message': encrypted})

# Define the root route
@app.route('/')
def home():
    return "Welcome to the Encryption Service! Use /encrypt to send data."

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
